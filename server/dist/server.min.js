var jwt=require("jwt-simple"),secret="Festus is the bestest";module.exports={errorLogger:function(a,b,c,d){console.error(a.stack),d(a)},errorHandler:function(a,b,c,d){c.status(500).send({error:a.message})},decode:function(a,b,c){var d,e=a.headers["x-access-token"];if(!e)return b.status(403).send();try{d=jwt.decode(e,secret),a.user=d,c()}catch(f){return c(f)}}};var mongoose=require("mongoose"),bcrypt=require("bcrypt-nodejs"),Q=require("q");mongoose.connect("mongodb://eureka:Eureka@ds033145.mongolab.com:33145/eurekadb");var db=mongoose.connection;db.on("error",console.error.bind(console,"connection error:")),db.once("open",function(a){console.log("connection made")});var SALT_WORK_FACTOR=10,userSchema=mongoose.Schema({username:String,password:String,firstname:String,lastname:String,date:{type:Date,"default":Date.now}});userSchema.methods.comparePasswords=function(a){var b=Q.defer(),c=this.password;return bcrypt.compare(a,c,function(a,c){a?b.reject(a):b.resolve(c)}),b.promise},userSchema.pre("save",function(a){var b=this;return b.isModified("password")?void bcrypt.genSalt(SALT_WORK_FACTOR,function(c,d){return c?a(c):void bcrypt.hash(b.password,d,null,function(c,e){return c?a(c):(b.password=e,b.salt=d,void a())})}):a()});var urlSchema=mongoose.Schema({title:{type:String,"default":""},url:String,description:{type:String,"default":""},site_name:{type:String,"default":""},image:{type:String,"default":""},visits:{type:Number,"default":0},upvotes:{type:Number,"default":0},userid:{type:Number,"default":0},date:{type:Date,"default":Date.now}}),upVoteSchema=mongoose.Schema({userid:String,linkid:String,date:{type:Date,"default":Date.now}}),models={Url:mongoose.model("Url",urlSchema),User:mongoose.model("User",userSchema),UpVote:mongoose.model("Upvote",upVoteSchema)};module.exports=models;var Users=require("../db/configdb.js").User,Q=require("q"),jwt=require("jwt-simple"),secret="Festus is the bestest";module.exports={login:function(a,b,c){var d=a.body.username,e=a.body.password,f=Q.nbind(Users.findOne,Users);f({username:d}).then(function(a){return a?a.comparePasswords(e).then(function(d){if(!d)return c(new Error("No user"));var e=jwt.encode(a,secret);b.json({username:a.username,token:e})}):void c(new Error("User does not exist"))}).fail(function(a){c(a)})},signup:function(a,b,c){var d=a.body.username,e=a.body.password,f=a.body.firstname,g=a.body.lastname,h=Q.nbind(Users.findOne,Users);h({username:d}).then(function(a){if(!a){var b=Q.nbind(Users.create,Users),h={username:d,password:e,firstname:f,lastname:g};return b(h)}c(new Error("User already exist!"))}).then(function(a){var c=jwt.encode(a,secret);b.json({username:a.username,token:c})}).fail(function(a){c(a)})},checkAuth:function(a,b,c){var d=a.headers["x-access-token"];if(d){var e=jwt.decode(d,secret),f=Q.nbind(Users.findOne,Users);f({username:e.username}).then(function(a){a?b.status(200).send():b.status(401).send()}).fail(function(a){c(a)})}else c(new Error("No token"))}};var usersController=require("./usersController.js");module.exports=function(a){a.post("/login",usersController.login),a.post("/signup",usersController.signup),a.get("/signedin",usersController.checkAuth)};